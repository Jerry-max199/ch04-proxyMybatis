<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzjm.dao.StudentDao">
<!--
        parameterType:dao接口中方法参数的数据类型
        parameterType他的值是Java数据类型全限定名称获知mybatis定义的别名
        例如：paramateType=“java.lang.Integer”
              parameterType=“int”
        注意：parameterType不是强制的，mybatis通过反射机制能够发现接口参数的数据类型
        所以可以没有，一般我么也不写。
        使用#{}之后，mybais执行sql语句是使用sql的jdbc中的PreparedStatement对象
        有mybatis执行下面代码：
        1.mybatis创建Connect，PreparedStatement对象
        String sql=“select id,name,age from student where id=?”
        PreparedStatement pst=conn.PreparedStatement(sql)
        pst.setInt(1,1001);
        2.执行sql封装为resultType="com.com.zzjm.domain.Student"这个对象
        ResultSet rs=ps.executeQuery();
        Student student=null;
        while(rs.next){
        student =new  Student();
        student.setId(rs.getInt("id"));
        student.setName(rs.getSreing("name"));
        student.setEmail(rs.getString("email"));
        student.setAge(rs.getInt("age"));
        return student;
        }
-->
    <select id="selectStudent" parameterType="int" resultType="com.zzjm.domain.Student">
        select * from Student where id=#{id}
    </select>
    <!--多个参数，使用@Param命名-->
    <select id="selectMulitParam" resultType="com.zzjm.domain.Student">
        select * from Student where name=#{myname} or age=#{myage}
    </select>
    <!--多个参数，使用对象类型传参数
    使用对象语法：#{属性名，javaType=类型名称，jdbcType=数据类型}很少用。
                javaType：指java中的属性数据类型
                jdbcType：指数据库中数据类型
                例如：#{name，javaType=java.lang.String,jdbcType=VARCHAR}
           我们使用简化方式：#{属性名}，javaType的值和jdbcType的值可以通过反射获取
    -->
    <select id="selectStudentObject" resultType="com.zzjm.domain.Student">
        select * from Student where name=#{name} and id=#{id}
    </select>
</mapper>